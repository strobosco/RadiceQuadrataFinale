{"version":3,"sources":["pages/components/Descrizione.js","pages/components/Calcolo.js","pages/components/Metodo.js","pages/components/Titolo.js","pages/HomePage.js","pages/components/TitoloParagone.js","pages/components/ParagoneInput.js","pages/components/TableHead.js","pages/components/Table.js","grafici/MiniFigure.png","grafici/BigFigure.png","pages/components/Grafici.js","pages/Paragone.js","App.js","reportWebVitals.js","index.js","functions/funzioni.js"],"names":["Descrizione","nameOfClass","src","chooseDesc","Calcolo","setRisultato","useState","radicando","setRadicando","ripetizioni","setRipetizioni","onSubmit","e","a","preventDefault","ris","radice","Babilonese","Errore","Tangenti","Inverso","type","id","placeholder","value","onChange","target","className","Metodo","showDesc","onToggle","risultato","method","onClick","isShown","Titolo","HomePage","showDescription","setShowDescription","risultatoBabilonese","setRisultatoBabilonese","risultatoErrore","setRisultatoErrore","risultatoTangenti","setRisultatoTangenti","risultatoInverso","setRisultatoInverso","toggleDesc","map","href","TitoloParagone","ParagoneInput","showHead","setShowHead","confronti","setConfronti","i","risBab","risErr","risTan","risInv","confronto","babilonese","errore","tangenti","inverso","console","log","TableHead","Table","Grafici","graficoMini","graficoBig","Paragone","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports","num","iterazioni","Q","Qprec","n","esci","Math","abs","volte","x"],"mappings":"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","file":"static/js/main.54a0786e.chunk.js","sourcesContent":["const Descrizione = ({ nameOfClass }) => {\n\n    const chooseDesc = (nameOfClass) => {\n\n        const descBabilonese = \"Il metodo babilonese approssima la radice \\\n        calcolando pi√π volte la media artimetica di due numeri\";\n        const descErrore = \"Il metodo con controllo dell'errore approssima \\\n        la radice controllando l'aumento di precisione tra due iterazioni successive\";\n        const descTangenti = \"Il metodo delle tangenti viene ideato da Newton\";\n        const descInverso = \"Il metodo dell'inverso viene ideato da Newton\";\n\n        switch(nameOfClass){\n            case \"babilonese\":\n                return (<>\n                <p>{descBabilonese}</p>\n                <img src=\"https://miro.medium.com/max/237/0*eZi6AX0tWAmI-ICy.png\" />\n                </>) ;\n                break;\n            case \"errore\":\n                return (<>\n                <p>{descErrore}</p>\n                </>);\n                break;\n            case \"tangenti\":\n                return (<>\n                <p>{descTangenti}</p>\n                <img src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/0ff048abd4c1a8244f09ce8a7ff394626bdb6f80\" />\n                </>);\n                break;\n            case \"inverso\":\n                return (<>\n                    <p>{descInverso}</p>\n                </>)\n            default:\n                return \"Il metodo selezionato non esiste\"\n        }\n    }\n\n    return (\n        <>{chooseDesc(nameOfClass)}</>\n    )\n}\n\nexport default Descrizione\n","import { useState } from \"react\"\nimport radice from \"../../functions/funzioni\";\n\nconst Calcolo = ({ nameOfClass, setRisultato }) => {\n\n    const [radicando, setRadicando] = useState(\"\")\n    const [ripetizioni, setRipetizioni] = useState(\"\")\n\n    const onSubmit = async (e) => {\n        e.preventDefault()\n\n        switch(nameOfClass) {\n            case \"babilonese\":\n                var ris = radice.Babilonese(radicando, ripetizioni)\n                break\n            case \"errore\":\n                var ris = radice.Errore(radicando, ripetizioni)\n                break\n            case \"tangenti\":\n                var ris = radice.Tangenti(radicando, ripetizioni)\n                break\n            case \"inverso\":\n                var ris = radice.Inverso(radicando, ripetizioni)\n                break\n        }\n\n        setRisultato(ris)\n    }\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input type=\"number\" id={\"radicando\" + nameOfClass} placeholder=\"Radicando\" value={radicando} onChange={(e) => setRadicando(e.target.value)}></input> <br></br> <br></br>\n                <input type=\"number\" id={\"ripetizioni\" + nameOfClass} placeholder=\"Ripetizioni massime\" value={ripetizioni} onChange={(e) => setRipetizioni(e.target.value)}></input> <br></br> <br></br>\n                <input type=\"submit\" value=\"Calcola!\" className=\"calcola\"></input>\n            </form>\n        </>\n    )\n}\n\nexport default Calcolo\n","import Descrizione from \"./Descrizione\"\nimport Calcolo from \"./Calcolo\"\n\nconst Metodo = ({ nameOfClass, showDesc, onToggle, setRisultato, risultato }) => {\n\n    switch(nameOfClass) {\n        case \"babilonese\":\n            var method = \"Babilonese\"\n            break\n        case \"errore\":\n            var method = \"Errore\"\n            break\n        case \"tangenti\":\n            var method = \"Tangenti\"\n            break\n        case \"inverso\":\n            var method = \"Inverso\"\n            break\n    }\n\n    return (\n        <div className={nameOfClass}>\n            <button type=\"button\" className=\"collapsible\" onClick={() => onToggle(showDesc.id)}>Metodo {method}</button> <br/><br/>     \n            {showDesc.isShown && <Descrizione nameOfClass={nameOfClass} />} <br/>\n            <Calcolo nameOfClass={nameOfClass} setRisultato={setRisultato} />\n            <span id={\"risultato\" + nameOfClass}>{risultato}</span> \n        </div>\n    )\n}\n\nexport default Metodo\n","const Titolo = () => {\n    return (\n        <div className=\"titolo\">\n            <h1>Calcolo approssimato della radice quadrata</h1>\n        </div>\n    )\n}\n\nexport default Titolo\n","import Metodo from './components/Metodo';\nimport Titolo from \"./components/Titolo\";\nimport { useState } from \"react\";\n\nconst HomePage = () => {\n\n  const [showDescription, setShowDescription] = useState([\n    {\n      id: 0,\n      isShown: false,\n    }, {\n      id: 1,\n      isShown: false,\n    }, {\n      id: 2,\n      isShown: false,\n    }, {\n      id: 3,\n      isShown: false,\n    }\n  ]);\n\n  const [risultatoBabilonese, setRisultatoBabilonese] = useState(\"\");\n  const [risultatoErrore, setRisultatoErrore] = useState(\"\");\n  const [risultatoTangenti, setRisultatoTangenti] = useState(\"\");\n  const [risultatoInverso, setRisultatoInverso] = useState(\"\");\n\n  const toggleDesc = (id) => {\n    setShowDescription(showDescription.map((showDescription) => \n      showDescription.id === id ? {...showDescription, isShown: !showDescription.isShown} : showDescription\n    ))\n  };\n\n  return (\n    <>\n    <Titolo />\n    <Metodo nameOfClass={\"babilonese\"} showDesc={showDescription[0]} onToggle={toggleDesc} risultato={risultatoBabilonese} setRisultato={setRisultatoBabilonese}  />\n    <Metodo nameOfClass={\"errore\"} showDesc={showDescription[1]} onToggle={toggleDesc} risultato={risultatoErrore} setRisultato={setRisultatoErrore} />\n    <Metodo nameOfClass={\"tangenti\"} showDesc={showDescription[2]} onToggle={toggleDesc} risultato={risultatoTangenti} setRisultato={setRisultatoTangenti} />\n    <Metodo nameOfClass={\"inverso\"} showDesc={showDescription[3]} onToggle={toggleDesc} risultato={risultatoInverso} setRisultato={setRisultatoInverso} />\n    <a className=\"calcola\" href=\"https://github.com/strobosco/radicequadratav2\">Link to GitHub Repo</a>\n    <a className=\"calcola\" href=\"/paragone\">Paragone</a>\n    </>\n  );\n}\n\nexport default HomePage;\n","const TitoloParagone = () => {\n    return (\n        <div className=\"titolo\">\n            <h1>Paragoniamo i vari metodi</h1>\n        </div>\n    )\n}\n\nexport default TitoloParagone\n","import { useState } from \"react\";\nimport radice from \"../../functions/funzioni\";\n\nconst ParagoneInput = ({ risultato, setRisultato, showHead, setShowHead }) => {\n\n    const [radicando, setRadicando] = useState(\"\")\n    const [ripetizioni, setRipetizioni] = useState(\"\")\n    const [confronti, setConfronti] = useState(\"\")\n\n    const onSubmit = async (e) => {\n        e.preventDefault()\n\n        const risultato = []\n\n        for(var i = 0; i < confronti; i++) {\n            const risBab = radice.Babilonese(radicando, ripetizioni)\n            const risErr = radice.Errore(radicando, ripetizioni)\n            const risTan = radice.Tangenti(radicando, ripetizioni)\n            const risInv = 1 / radice.Inverso(radicando, ripetizioni)\n\n            risultato[i] = {\n                confronto: i + 1,\n                babilonese: risBab,\n                errore:risErr,\n                tangenti: risTan,\n                inverso: risInv,\n            }\n        }\n\n\n        setRisultato(risultato)\n        console.log(risultato)\n\n        if(showHead == false) {\n            setShowHead(true)\n        }\n    }\n\n    return (\n        <div className=\"tabella-output\">\n            <form onSubmit={onSubmit}>\n                <input type=\"number\" placeholder=\"Radicando\" value={radicando} onChange={(e) => setRadicando(e.target.value)}></input> <br></br> <br></br>\n                <input type=\"number\" placeholder=\"Ripetizioni massime\" value={ripetizioni} onChange={(e) => setRipetizioni(e.target.value)}></input> <br></br> <br></br>\n                <input type=\"number\" placeholder=\"Numero confronti\" value={confronti} onChange={(e) => setConfronti(e.target.value)}></input> <br></br> <br></br>\n                <input type=\"submit\" value=\"Paragona!\" className=\"calcola\"></input>\n            </form> \n        </div>\n    )\n\n}\n\nexport default ParagoneInput;","const TableHead = () => {\n    return (\n        <thead>\n            <tr>\n                <td>Confronto</td>\n                <td>Babilonese</td>\n                <td>Errore</td>\n                <td>Tangenti</td>\n                <td>Inverso</td>\n            </tr>\n        </thead>\n    )\n}\n\nexport default TableHead\n","import TableHead from \"./TableHead\";\n\nconst Table = ({ risultato, showHead }) => {\n\n    const renderTbody = () => {\n        \n        return(\n            risultato.map( ris => {\n                return(\n                    <tr key={ris.confronto} >\n                        <td>{ris.confronto}</td>\n                        <td>{ris.babilonese}</td>\n                        <td>{ris.errore}</td>\n                        <td>{ris.tangenti}</td>\n                        <td>{ris.inverso}</td>\n                    </tr>  \n            )})\n        )\n    }\n\n    return (\n        <table className=\"tabella-output\">\n            {showHead ? (<TableHead />) : null}\n            <tbody>\n                {renderTbody()}\n            </tbody> \n        </table>\n    )\n}\n\nexport default Table\n","export default __webpack_public_path__ + \"static/media/MiniFigure.430fc85b.png\";","export default __webpack_public_path__ + \"static/media/BigFigure.3bf0d248.png\";","import graficoMini from \"../../grafici/MiniFigure.png\";\nimport graficoBig from \"../../grafici/BigFigure.png\";\n\nconst Grafici = () => {\n    return (\n        <div className=\"grafici\">\n            <h1>Grafici</h1>\n            <img src={graficoMini}></img> \n            <br /> <br />\n            <img src={graficoBig}></img> \n        </div>\n    )\n}\n\nexport default Grafici\n","import Titolo from \"./components/TitoloParagone\";\nimport ParagoneInput from \"./components/ParagoneInput\";\nimport Table from './components/Table';\nimport Grafici from \"./components/Grafici\";\nimport { useState } from \"react\";\n\nconst Paragone = () => {\n\n    const [risultato, setRisultato] = useState([])\n    const [showHead, setShowHead] = useState(false)\n\n    return (\n        <>\n        <Titolo />\n        <ParagoneInput risultato={risultato} setRisultato={setRisultato} showHead={showHead} setShowHead={setShowHead} />\n        <Table risultato={risultato} showHead={showHead} />\n        <Grafici />\n        </>\n    );\n}\n\n\nexport default Paragone;\n","import HomePage from \"./pages/HomePage\";\nimport Paragone from \"./pages/Paragone\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nconst App = () => {\n\n  return(\n    <Router>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/paragone\" component={Paragone} />\n    </Router>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports.Babilonese = function Babilonese(num, iterazioni){\n\n    var Q, Qprec, n;\n    n = 0;\n    Qprec = num / 2;\n    for(n = 0; n < iterazioni; n++){\n        Q = (Qprec + num / Qprec) / 2;\n        Qprec = Q;\n    }\n\n    return Q;\n\n}\n\nmodule.exports.Errore = function Errore(num, iterazioni){\n\n    const EPS = 0.00001;\n\n    var Q, Qprec, errore;\n    var n, esci = 0;\n    Qprec = num / 2;\n    for(n = 0; n < iterazioni && !esci; n++){\n        Q = (Qprec + num / Qprec) / 2;\n        errore = Math.abs((Q - Qprec) / Q);\n        if(errore < EPS) {\n            esci = 1;\n        } else {\n            Qprec = Q;\n        }\n    }\n\n    return Q;\n}\n\n// da definire tangenti e inverso\n\nmodule.exports.Tangenti = function Tangenti(num, iterazioni){\n\n    var volte = 0;\n    var x = 1.0;\n    for(volte = 0; volte <= iterazioni; volte++){\n        x = (x / 2) + (num / (2 * x));\n    }\n\n    return x;\n\n}\n\nmodule.exports.Inverso = function Inverso(num, iterazioni){\n\n    var volte = 0;\n    var x = 0.002;\n    for(volte = 0; volte <= iterazioni; volte++){\n        x = 0.5 * x * (3 - num * x * x);\n    }\n    \n    return x;\n\n}"],"sourceRoot":""}